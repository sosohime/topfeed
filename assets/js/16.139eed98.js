(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{188:function(t,a,e){"use strict";e.r(a);var s=e(0),i=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"扩展对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扩展对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 扩展对象")]),t._v(" "),e("p",[t._v("Topfeed 对 Koa 的原生对象进行了一些扩展")]),t._v(" "),e("h3",{attrs:{id:"application"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application","aria-hidden":"true"}},[t._v("#")]),t._v(" Application")]),t._v(" "),e("p",[e("code",[t._v("Application")]),t._v(" 是全局应用对象，在一个应用中，只会实例化一个，它继承自 "),e("code",[t._v("Koa.Application")]),t._v("，在它上面我们可以挂载一些全局的方法和对象。我们可以轻松的在插件或者应用中扩展 "),e("code",[t._v("Application")]),t._v(" 对象。")]),t._v(" "),e("h4",{attrs:{id:"框架扩展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#框架扩展","aria-hidden":"true"}},[t._v("#")]),t._v(" 框架扩展")]),t._v(" "),e("p",[t._v("框架会将一些属性自动挂载到 Context 实例上以便应用使用。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("config")]),t._v(": 全局配置")]),t._v(" "),e("li",[e("code",[t._v("root")]),t._v(": server 项目根目录")])]),t._v(" "),e("h4",{attrs:{id:"业务扩展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#业务扩展","aria-hidden":"true"}},[t._v("#")]),t._v(" 业务扩展")]),t._v(" "),e("p",[t._v("为了控制业务的扩展，收敛所有的扩展逻辑，用户在扩展 Application 时需要在 typings 里声明 Application 的扩展，\n否则 ts 检查会报错。\n扩展方式如下")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code")])]),e("h3",{attrs:{id:"context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context","aria-hidden":"true"}},[t._v("#")]),t._v(" Context")]),t._v(" "),e("p",[t._v("Context 是一个请求级别的对象，继承自 Koa.Context。在每一次用户收到请求时，框架会实例化一个 Context 对象，\n这个对象封装了这次用户请求的信息，并提供了许多便捷的方法来获取请求参数或设置响应信息。框架会将一些属性自动挂载\n到 Context 实例上以方便应用使用。")]),t._v(" "),e("h4",{attrs:{id:"框架扩展-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#框架扩展-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 框架扩展")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("locale")]),t._v(": 用户语言和地区信息，格式为"),e("code",[t._v("zh-cn")]),t._v(","),e("code",[t._v("en-us")]),t._v(","),e("code",[t._v("en")]),t._v("之类")]),t._v(" "),e("li",[e("code",[t._v("messages")]),t._v(": 用户语言对应的文案格式为 "),e("code",[t._v('{"sign": "登录" }')])]),t._v(" "),e("li",[e("code",[t._v("service")]),t._v(": service 自动挂载")]),t._v(" "),e("li",[e("code",[t._v("render")]),t._v(": 模板渲染")])]),t._v(" "),e("h4",{attrs:{id:"业务扩展-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#业务扩展-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 业务扩展")]),t._v(" "),e("p",[t._v("为了控制业务的扩展，收敛所有的扩展逻辑，用户在扩展 Application 时需要在 typings 里声明 Application 的扩展，\n否则 ts 检查会报错。")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code")])])])}],!1,null,null,null);i.options.__file="objects.md";a.default=i.exports}}]);